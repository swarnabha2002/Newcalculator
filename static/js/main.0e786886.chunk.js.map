{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","useState","Oldexpression","setOldexpression","expression","setexpression","prev","setPrev","numerics","Set","operators","buttons","evaluation","evaluate","eval","putNUmerics","value","putOperators","slice","putDelete","length","handkeyup","event","console","log","key","has","className","tabIndex","onKeyUp","style","width","height","background","display","flexDirection","alignItems","justifyContent","padding","borderRadius","overflow","flexWrap","margin","backgroundColor","map","buttonValue","idx","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y3BAKA,SAASA,MAEP,cAAsCC,oDAAS,KAA/C,8KAAIC,cAAJ,cAAmBC,iBAAnB,cACA,WAAgCF,oDAAS,KAAzC,+KAAIG,WAAJ,cAAgBC,cAAhB,cACA,WAAsBJ,oDAAS,OAA/B,+KAAKK,KAAL,cAAWC,QAAX,cAEIC,SAAU,IAAIC,IAAI,gBAClBC,UAAW,IAAID,IAAI,QACnBE,QAAU,CAAC,IAAI,IAAI,YAAY,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAIhGC,WAAY,SAAZA,aACF,IAAIC,SAAWC,KAAKV,YACpBD,iBAAiB,KAAKC,YACtBC,cAAcQ,UACdN,QAAQ,QAGNQ,YAAa,SAASC,GACd,OAAPV,MACDH,iBAAiB,SAAUC,YAC3BC,cAAcW,IAEdX,cAAcD,WAAaY,GAE7BT,QAAQ,QAGNU,aAAc,SAASD,GAEvBX,cADS,MAARC,KACaF,WAAaY,EAEbZ,WAAWc,MAAM,GAAG,GAAKF,GAEzCT,QAAQ,OAGNY,UAAY,WACVf,WAAWgB,QAAU,GACvBf,cAAcD,WAAWc,MAAM,GAAI,IAErCX,QAAQ,QAONc,UAAW,SAASC,GACtBC,QAAQC,IAAIF,EAAMG,KACA,aAAbH,EAAMG,IACPN,YACOX,SAASkB,IAAIJ,EAAMG,KAC1BV,YAAYO,EAAMG,KACXf,UAAUgB,IAAIJ,EAAMG,KAC3BR,aAAaK,EAAMG,KAEA,SAAbH,EAAMG,KACZb,cAON,OACE,mEAAKe,UAAU,MAAMC,SAAU,EAAGC,QAASR,UAA3C,UACE,6FACA,mEAAKS,MAAO,CACTC,MAAO,QACPC,OAAQ,QACRC,WAAY,UACZC,QAAS,OACTC,cAAe,SACfC,WAAY,WACZC,eAAgB,SAChBC,QAAS,OACTC,aAAc,OACdC,SAAU,UAVb,UAaE,0EAAKtC,gBACL,0EAAKE,gBAGP,kEAAK0B,MAAO,CACTC,MAAO,QACPC,OAAQ,QACRC,WAAY,UACZC,QAAS,OACTO,SAAU,OACVN,cAAe,SACfC,WAAY,WACZC,eAAgB,SAChBK,OAAQ,OACRJ,QAAS,OACTC,aAAc,OACdI,gBAAiB,QAZpB,SAcGhC,QAAQiC,KAAI,SAASC,EAAYC,GAChC,OACE,qEAAQhB,MAAO,CACbC,MAAO,OACPO,QAAS,MACTI,OAAQ,MACRH,aAAc,QAEhBQ,QAAS,WACS,MAAbF,EACDxC,cAAc,KACM,aAAbwC,EACP1B,YACOX,SAASkB,IAAImB,GACpB9B,YAAY8B,GACHnC,UAAUgB,IAAImB,GACvB5B,aAAa4B,GACY,MAAhBA,GACTjC,cAhBJ,SAsBGiC,YAYA7C,2B,mDC7IA,K,0GCYAgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3D,EAAA,EAAD,MAEF4D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e786886.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\n\n\nfunction App() {\n\n  let[Oldexpression, setOldexpression]= useState(\" \");\n  let[expression, setexpression]= useState(\"0\");\n  let [prev, setPrev] = useState(\"ANS\");\n\n  let numerics= new Set(\"0123456789()\");\n  let operators= new Set(\"+-*/\");\n  let buttons = [\"(\",\")\",\"backspace\",\"AC\",\"7\",\"8\",\"9\",\"/\",\"4\",\"5\",\"6\",\"*\",\"1\",\"2\",\"3\",\"-\",\"0\",\".\",\"=\",\"+\"];\n\n\n\n  let evaluation= function(){\n    let evaluate = eval(expression);\n    setOldexpression(\"= \"+expression);\n    setexpression(evaluate);\n    setPrev(\"ANS\");\n  }\n\n  let putNUmerics= function(value){\n    if(prev ==\"ANS\"){\n      setOldexpression(\"Ans = \"+ expression);\n      setexpression(value);\n    }else{\n      setexpression(expression + value);\n    }\n    setPrev(\"NUM\");\n  }\n\n  let putOperators= function(value){\n    if(prev != \"OP\"){\n      setexpression(expression + value);\n    }else{\n      setexpression(expression.slice(0,-1) + value);\n    }\n    setPrev(\"OP\");\n  }\n\n  let putDelete = function(){\n    if (expression.length >= 1) {\n      setexpression(expression.slice(0, -1));\n    }\n    setPrev(\"DEL\");\n  };\n\n\n\n  \n\n  let handkeyup= function(event){\n    console.log(event.key);\n      if(event.key == \"Backspace\"){\n        putDelete();\n      }else if(numerics.has(event.key)){\n        putNUmerics(event.key);\n      }else if(operators.has(event.key)){\n        putOperators(event.key);\n      }\n      else if(event.key == \"Enter\"){\n        evaluation();\n      }\n  }\n  \n  \n\n\n  return (\n    <div className=\"App\" tabIndex={0} onKeyUp={handkeyup}>\n      <h2>New Calculator</h2>\n      <div style={{\n         width: \"400px\",\n         height: \"200px\",\n         background: \"#ffffff\",\n         display: \"flex\",\n         flexDirection: \"column\",\n         alignItems: \"flex-end\",\n         justifyContent: \"center\",\n         padding: \"20px\",\n         borderRadius: \"10px\",\n         overflow: \"hidden\"\n      }}>\n\n        <h6>{Oldexpression}</h6>\n        <h1>{expression}</h1>\n\n      </div>\n      <div style={{\n         width: \"400px\",\n         height: \"200px\",\n         background: \"#ffffff\",\n         display: \"flex\",\n         flexWrap: \"wrap\",\n         flexDirection: \"column\",\n         alignItems: \"flex-end\",\n         justifyContent: \"center\",\n         margin: \"20px\",\n         padding: \"20px\",\n         borderRadius: \"10px\",\n         backgroundColor: \"grey\"\n      }}>\n        {buttons.map(function(buttonValue,idx){\n          return(\n            <button style={{\n              width: \"90px\",\n              padding: \"5px\",\n              margin: \"5px\",\n              borderRadius: \"10px\"\n            }}\n            onClick={function(){\n              if(buttonValue==\"AC\"){\n                setexpression(\" \");\n              }else if(buttonValue==\"backspace\"){\n                putDelete();\n              }else if(numerics.has(buttonValue)){\n                putNUmerics(buttonValue);\n              } else if (operators.has(buttonValue)) {\n                putOperators(buttonValue);\n              } else if (buttonValue === \"=\") {\n                evaluation();\n              }\n            }}\n            \n            \n            >\n              {buttonValue}\n            \n            </button>\n          )\n        })}\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}